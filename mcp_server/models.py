# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T15:34:24+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Address(BaseModel):
    addressLine1: Optional[str] = Field(
        None, description='The first line of the street address.'
    )
    addressLine2: Optional[str] = Field(
        None,
        description="The second line of the street address. This field is not always used, but can be used for 'Suite Number' or 'Apt Number'.",
    )
    city: Optional[str] = Field(None, description='The city of the address.')
    country: Optional[str] = Field(
        None,
        description="The two-letter ISO 3166 standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:CountryCodeEnum'>eBay API documentation</a>",
    )
    county: Optional[str] = Field(None, description='The county of the address.')
    postalCode: Optional[str] = Field(
        None, description='The postal code of the address.'
    )
    stateOrProvince: Optional[str] = Field(
        None, description='The state or province of the address.'
    )


class Contact(BaseModel):
    firstName: Optional[str] = Field(
        None, description='The first name of the contact person.'
    )
    lastName: Optional[str] = Field(
        None, description='The last name of the contact person.'
    )


class ErrorParameter(BaseModel):
    name: Optional[str] = Field(None, description='The object of the error.')
    value: Optional[str] = Field(None, description='The value of the object.')


class Phone(BaseModel):
    countryCode: Optional[str] = Field(
        None,
        description='The two-letter ISO 3166 standard of the country to which the phone number belongs.',
    )
    number: Optional[str] = Field(
        None, description='The numeric string representing the phone number.'
    )
    phoneType: Optional[str] = Field(
        None,
        description='The type of phone service. Valid Values: MOBILE or LAND_LINE Code so that your app gracefully handles any future changes to this list.',
    )


class BusinessAccount(BaseModel):
    address: Optional[Address] = Field(
        None,
        description='The container that returns the address of the business account.',
    )
    doingBusinessAs: Optional[str] = Field(
        None,
        description='An additional name that is used for their business on eBay. The business name is returned in the name field.',
    )
    email: Optional[str] = Field(
        None, description='The email address of the business account.'
    )
    name: Optional[str] = Field(
        None, description="The business name associated with the user's eBay account."
    )
    primaryContact: Optional[Contact] = Field(
        None,
        description='The container that returns the contact details of the person who is the primary contact for this account.',
    )
    primaryPhone: Optional[Phone] = Field(
        None,
        description='The container that returns the primary phone number for the business account.',
    )
    secondaryPhone: Optional[Phone] = Field(
        None,
        description='The container that returns the secondary phone number for the business account.',
    )
    website: Optional[str] = Field(
        None,
        description='The business website address associated with the eBay account.',
    )


class Error(BaseModel):
    category: Optional[str] = Field(None, description='Identifies the type of erro.')
    domain: Optional[str] = Field(
        None,
        description='Name for the primary system where the error occurred. This is relevant for application errors.',
    )
    errorId: Optional[int] = Field(
        None, description='A unique number to identify the error.'
    )
    inputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    longMessage: Optional[str] = Field(
        None, description='A more detailed explanation of the error.'
    )
    message: Optional[str] = Field(
        None,
        description="Information on how to correct the problem, in the end user's terms and language where applicable.",
    )
    outputRefIds: Optional[List[str]] = Field(
        None,
        description='An array of request elements most closely associated to the error.',
    )
    parameters: Optional[List[ErrorParameter]] = Field(
        None,
        description='An array of name/value pairs that describe details the error condition. These are useful when multiple errors are returned.',
    )
    subdomain: Optional[str] = Field(
        None,
        description='Further helps indicate which subsystem the error is coming from. System subcategories include: Initialization, Serialization, Security, Monitoring, Rate Limiting, etc.',
    )


class IndividualAccount(BaseModel):
    email: Optional[str] = Field(
        None, description="The eBay user's registration email address."
    )
    firstName: Optional[str] = Field(None, description="The eBay user's first name.")
    lastName: Optional[str] = Field(None, description="The eBay user's last name.")
    primaryPhone: Optional[Phone] = Field(
        None,
        description="The container that returns the eBay user's primary phone number information.",
    )
    registrationAddress: Optional[Address] = Field(
        None,
        description="The container that returns the eBay user's address information.",
    )
    secondaryPhone: Optional[Phone] = Field(
        None,
        description="The container that returns the eBay user's secondary phone number information.",
    )


class UserResponse(BaseModel):
    accountType: Optional[str] = Field(
        None,
        description="Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
    )
    businessAccount: Optional[BusinessAccount] = Field(
        None,
        description='The container that returns the business account information of the user.',
    )
    individualAccount: Optional[IndividualAccount] = Field(
        None, description='The account information of the user.'
    )
    registrationMarketplaceId: Optional[str] = Field(
        None,
        description="The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
    )
    status: Optional[str] = Field(
        None,
        description="Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
    )
    userId: Optional[str] = Field(
        None,
        description="The eBay immutable user ID of the user's account and can always be used to identify the user.",
    )
    username: Optional[str] = Field(
        None,
        description='The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.',
    )
